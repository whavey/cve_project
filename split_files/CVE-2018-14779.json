{"data_type": "CVE", "data_format": "MITRE", "data_version": "4.0", "CVE_data_meta": {"ID": "CVE-2018-14779", "ASSIGNER": "cve@mitre.org"}, "affects": {"vendor": {"vendor_data": [{"vendor_name": "yubico", "product": {"product_data": [{"product_name": "piv_manager", "version": {"version_data": [{"version_value": "1.4.2", "version_affected": "="}, {"version_value": "1.4.2b", "version_affected": "="}, {"version_value": "1.4.2c", "version_affected": "="}, {"version_value": "1.4.2d", "version_affected": "="}, {"version_value": "1.4.2e", "version_affected": "="}, {"version_value": "1.4.2f", "version_affected": "="}, {"version_value": "1.4.2g", "version_affected": "="}]}}, {"product_name": "smart_card_minidriver", "version": {"version_data": [{"version_value": "3.7.3.160", "version_affected": "<="}]}}]}}]}}, "problemtype": {"problemtype_data": [{"description": [{"lang": "en", "value": "CWE-787"}, {"lang": "en", "value": "CWE-119"}]}]}, "references": {"reference_data": [{"url": "http://www.openwall.com/lists/oss-security/2018/08/14/2", "name": "[oss-security] 20180814 X41 D-Sec GmbH Security Advisory X41-2018-001: Multiple Vulnerabilities in Yubico Piv", "refsource": "MLIST", "tags": ["Mailing List", "Third Party Advisory"]}, {"url": "https://www.x41-dsec.de/lab/advisories/x41-2018-001-Yubico-Piv/", "name": "https://www.x41-dsec.de/lab/advisories/x41-2018-001-Yubico-Piv/", "refsource": "MISC", "tags": ["Third Party Advisory"]}, {"url": "https://www.yubico.com/support/security-advisories/ysa-2018-03/", "name": "https://www.yubico.com/support/security-advisories/ysa-2018-03/", "refsource": "CONFIRM", "tags": ["Vendor Advisory"]}]}, "description": {"description_data": [{"lang": "en", "value": "A buffer overflow issue was discovered in the Yubico-Piv 1.5.0 smartcard driver. The file lib/ykpiv.c contains the following code in the function `ykpiv_transfer_data()`: {% highlight c %} if(*out_len + recv_len - 2 > max_out) { fprintf(stderr, 'Output buffer to small, wanted to write %lu, max was %lu.', *out_len + recv_len - 2, max_out); } if(out_data) { memcpy(out_data, data, recv_len - 2); out_data += recv_len - 2; *out_len += recv_len - 2; } {% endhighlight %} -- it is clearly checked whether the buffer is big enough to hold the data copied using `memcpy()`, but no error handling happens to avoid the `memcpy()` in such cases. This code path can be triggered with malicious data coming from a smartcard."}]}}
