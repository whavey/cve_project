{"data_type": "CVE", "data_format": "MITRE", "data_version": "4.0", "CVE_data_meta": {"ID": "CVE-2018-7164", "ASSIGNER": "cve@mitre.org"}, "affects": {"vendor": {"vendor_data": [{"vendor_name": "nodejs", "product": {"product_data": [{"product_name": "node.js", "version": {"version_data": [{"version_value": "9.7.0", "version_affected": "="}, {"version_value": "9.7.1", "version_affected": "="}, {"version_value": "9.8.0", "version_affected": "="}, {"version_value": "9.9.0", "version_affected": "="}, {"version_value": "9.10.0", "version_affected": "="}, {"version_value": "9.10.1", "version_affected": "="}, {"version_value": "9.11.0", "version_affected": "="}, {"version_value": "9.11.1", "version_affected": "="}, {"version_value": "9.11.2", "version_affected": "="}, {"version_value": "10.0.0", "version_affected": "="}, {"version_value": "10.1.0", "version_affected": "="}, {"version_value": "10.2.0", "version_affected": "="}, {"version_value": "10.2.1", "version_affected": "="}, {"version_value": "10.3.0", "version_affected": "="}, {"version_value": "10.4.0", "version_affected": "="}, {"version_value": "10.4.1", "version_affected": "="}, {"version_value": "10.5.0", "version_affected": "="}, {"version_value": "10.6.0", "version_affected": "="}, {"version_value": "10.7.0", "version_affected": "="}]}}]}}]}}, "problemtype": {"problemtype_data": [{"description": [{"lang": "en", "value": "CWE-400"}]}]}, "references": {"reference_data": [{"url": "http://www.securityfocus.com/bid/104463", "name": "104463", "refsource": "BID", "tags": ["Third Party Advisory", "VDB Entry"]}, {"url": "https://nodejs.org/en/blog/vulnerability/june-2018-security-releases/", "name": "https://nodejs.org/en/blog/vulnerability/june-2018-security-releases/", "refsource": "CONFIRM", "tags": ["Vendor Advisory"]}]}, "description": {"description_data": [{"lang": "en", "value": "Node.js versions 9.7.0 and later and 10.x are vulnerable and the severity is MEDIUM. A bug introduced in 9.7.0 increases the memory consumed when reading from the network into JavaScript using the net.Socket object directly as a stream. An attacker could use this cause a denial of service by sending tiny chunks of data in short succession. This vulnerability was restored by reverting to the prior behaviour."}]}}
